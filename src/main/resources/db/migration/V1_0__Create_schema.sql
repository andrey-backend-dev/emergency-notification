CREATE TYPE service AS ENUM ('TELEGRAM', 'EMAIL');

CREATE CAST (varchar AS service) WITH INOUT AS IMPLICIT;

CREATE SEQUENCE caller_id_seq MINVALUE 1 INCREMENT 5;

CREATE TABLE IF NOT EXISTS caller (
id BIGINT PRIMARY KEY DEFAULT nextval('caller_id_seq'),
username VARCHAR UNIQUE NOT NULL,
password VARCHAR NOT NULL,
email VARCHAR UNIQUE NOT NULL,
message VARCHAR,
image VARCHAR
);

CREATE TABLE IF NOT EXISTS role (
name VARCHAR PRIMARY KEY
);

CREATE SEQUENCE caller2role_id_seq MINVALUE 1 INCREMENT 5;

CREATE TABLE IF NOT EXISTS caller2role (
id BIGINT PRIMARY KEY DEFAULT nextval('caller2role_id_seq'),
role_name VARCHAR NOT NULL REFERENCES role(name) ON DELETE CASCADE ON UPDATE CASCADE,
caller_id BIGINT NOT NULL REFERENCES caller(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS telegram_user (
chat_id BIGINT PRIMARY KEY,
username VARCHAR UNIQUE NOT NULL,
status BOOLEAN NOT NULL DEFAULT FALSE
);

CREATE SEQUENCE receiver_id_seq MINVALUE 1 INCREMENT 5;

CREATE TABLE IF NOT EXISTS receiver (
id BIGINT PRIMARY KEY DEFAULT nextval('receiver_id_seq'),
caller_id BIGINT NOT NULL REFERENCES caller(id) ON DELETE CASCADE ON UPDATE CASCADE,
name VARCHAR NOT NULL,
email VARCHAR,
telegram_id BIGINT REFERENCES telegram_user(chat_id) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE SEQUENCE emergency_id_seq MINVALUE 1 INCREMENT 5;

CREATE TABLE IF NOT EXISTS emergency_call (
id BIGINT PRIMARY KEY default nextval('emergency_id_seq'),
receiver_id BIGINT NOT NULL REFERENCES receiver(id) ON DELETE CASCADE ON UPDATE CASCADE,
service service NOT NULL,
date_called TIMESTAMP NOT NULL,
date_received TIMESTAMP
);